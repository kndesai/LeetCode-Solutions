/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {void} Do not return anything, modify root in-place instead.
 */
var flatten = function(root) {
    if (!root) {
        return;
    }

    let prev = null;

    const flattenHelper = function(node) {
        if (!node) {
            return;
        }
        const rightSubtree = node.right;
        if (prev !== null) {
            prev.right = node;
            prev.left = null;
        }
        prev = node;
        flattenHelper(node.left);
        flattenHelper(rightSubtree);
    };

    flattenHelper(root);
};
