/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} k
 * @return {ListNode}
 */
var rotateRight = function(head, k) {
    if (!head || k === 0) {
        return head;
    }

    let length = 1;
    let tail = head;
    while (tail.next) {
        length++;
        tail = tail.next;
    }

    const effectiveK = k % length;
    if (effectiveK === 0) {
        return head; 
    }

    let newHead = head;
    for (let i = 0; i < length - effectiveK - 1; i++) {
        newHead = newHead.next;
    }

    const result = newHead.next;
    newHead.next = null;
    tail.next = head;

    return result;
};
