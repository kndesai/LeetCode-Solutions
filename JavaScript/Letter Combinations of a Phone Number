/**
 * @param {string} digits
 * @return {string[]}
 */
var letterCombinations = function(digits) {
    if (digits.length === 0) return [];
    
    const mapping = {
        '2': 'abc',
        '3': 'def',
        '4': 'ghi',
        '5': 'jkl',
        '6': 'mno',
        '7': 'pqrs',
        '8': 'tuv',
        '9': 'wxyz'
    };
    
    const result = [];
    
    const backtrack = (currentCombination, nextDigits) => {
        if (nextDigits.length === 0) {
            result.push(currentCombination);
            return;
        }
        
        const currentDigit = nextDigits[0];
        const letters = mapping[currentDigit];
        
        for (const letter of letters) {
            backtrack(currentCombination + letter, nextDigits.slice(1));
        }
    };
    
    backtrack('', digits);
    
    return result;
};
