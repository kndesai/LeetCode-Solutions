/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var sumNumbers = function(root) {
    return dfs(root, 0);
};

/**
 * Helper function for DFS traversal.
 * @param {TreeNode} node
 * @param {number} currentSum
 * @return {number}
 */
var dfs = function(node, currentSum) {
    if (!node) {
        return 0;
    }
    const newSum = currentSum * 10 + node.val;
    if (!node.left && !node.right) {
        return newSum;
    }
    return dfs(node.left, newSum) + dfs(node.right, newSum);
};
